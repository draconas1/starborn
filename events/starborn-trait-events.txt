namespace = starborn_traits
@mtth = 3
@noRecurDays = 2000

# disease planetside
planet_event = {
	id = starborn_traits.1
	hide_window = yes
	mean_time_to_happen = {
		years = @mtth
	}

	pre_triggers = {
		has_owner = yes
	}

	trigger = {		
		owner = {
			is_country_type = default
			is_regular_empire = yes
			NOR = { 
				has_country_flag = STARBORN_NO_EVENTS 
				has_country_flag = starborn_no_bad_planet_bio
			}
		}
		colonizable_planet = yes
		habitable_structure = no
		count_owned_pop = {
			count > 1
		}
		any_owned_pop = {
			has_negative_starborn_trait = yes
		}
	}

	immediate = {
		random_list = {			
			1 = {
				modifier = {
					add = 3
					has_gene_clinic = no
				}
				planet_event = {
					id = starborn_traits.3
				}
				owner = {
					country_event = {
						id = starborn_traits.60
						days = 10
					}
				}
			}

			20 = {
				modifier = {
					add = 100
					owner = {
						has_country_flag = starborn_disease_gene_engineered
					}
				}
				# do nothing...
				set_variable = { which = EventId value = 1 }
				owner = { country_event = { id = starborn_traits.999 } }
			}
		}
	}
}

planet_event = {
	id = starborn_traits.3
	title = starborn_traits.3.name
	desc = starborn_traits.3.desc
	picture = GFX_evt_disease_outbreak
	is_triggered_only = yes

	option = {
		name = starborn_traits.3.option.a
		allow = {
			has_gene_clinic = yes
			owner = {
				resource_stockpile_compare = {
					resource = consumer_goods
					value >= 500
				}
			}
		}
		owner = {
			add_resource = {
				consumer_goods = -500
			}
		}
	}


	option = {
		name = starborn_traits.3.option.b
		if = {
			limit = {
				or = {
					has_modifier = starborn_died_of_disease
					has_modifier = starborn_died_of_disease_2
				}				
			}
			add_modifier = {
				modifier = starborn_died_of_disease_2
				days = 360
			}
		}
		else = {
			add_modifier = {
				modifier = starborn_died_of_disease
				days = 360
			}
		}
		random_owned_pop = {
			limit = {
				has_negative_starborn_trait = yes
			}
			kill_pop = yes
		}
		
	}

	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_planet_bio
				country_event = {
					id = starborn_traits.900
					days = @noRecurDays
				}
			}
		}
	}
}


# xenos brought disease to the hab
planet_event = {
	id = starborn_traits.10
	hide_window = yes
	mean_time_to_happen = {
		years = @mtth
	}

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		
		owner = {
			is_country_type = default
			is_regular_empire = yes
			NOR = { 
				has_country_flag = STARBORN_NO_EVENTS 
				has_country_flag = starborn_no_bad_hab_bio
			}
		}
		habitable_structure = yes
		any_owned_pop = {
			is_starborn_pop = yes
		}
		any_owned_pop = {
			is_robot_pop = no
			NOR = {
				has_trait = trait_pc_habitat_preference
				has_trait = trait_pc_starborn_habitat_start_preference
			}
		}
	}

	immediate = {
		random_list = {
			1 = {
				modifier = {
					add = 2
					has_gene_clinic = no
				}
				planet_event = {
					id = starborn_traits.11
				}
				owner = {
					country_event = {
						id = starborn_traits.60
						days = 10
					}
				}
			}

			20 = {
				modifier = {
					add = 100
					owner = {
						has_country_flag = starborn_disease_gene_engineered
					}
				}
				# do nothing...
				set_variable = { which = EventId value = 10 }
				owner = { country_event = { id = starborn_traits.999 } }
			}
		}
	}
}



planet_event = {
	id = starborn_traits.11
	title = starborn_traits.11.name
	desc = starborn_traits.11.desc
	picture = GFX_evt_emergency_workers
	is_triggered_only = yes

	option = {
		name = starborn_traits.11.option.a
		allow = {
			has_gene_clinic = yes
			owner = {
				resource_stockpile_compare = {
					resource = consumer_goods
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				consumer_goods = -1000
			}
		}
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		add_modifier = {
			modifier = starborn_xenophobe_25
			days = 500
		}
		add_modifier = {
			modifier = starborn_died_of_disease
			days = 360
		}
	}

	option = {
		name = starborn_traits.11.option.b
		allow = {
			OR = {
				owner = {
					OR = { 
						has_ethic = ethic_fanatic_xenophobe
						has_ethic = ethic_xenophobe
					}
				}
				any_owned_pop = {
					is_starborn_pop = yes
					OR = { 
						has_ethic = ethic_fanatic_xenophobe
						has_ethic = ethic_xenophobe
					}
				}
			}
		}
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		add_modifier = {
			modifier = starborn_xenophobe_100
			days = 500
		}
		hidden_effect = {
			planet_event = {
				id = starborn_traits.12
				days = 20 
				random = 20
			}	
		}
	}

	option = {
		name = starborn_traits.11.option.c
		add_modifier = {
			modifier = starborn_xenophobe_100
			days = 1000
		}
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		add_modifier = {
			modifier = starborn_died_of_disease_2
			days = 360
		}
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_bio
				country_event = {
					id = starborn_traits.901
					days = @noRecurDays
				}
			}
		}
	}
}

# xenos got spaced
planet_event = {
	id = starborn_traits.12
	title = starborn_traits.12.name
	desc = starborn_traits.12.desc
	picture = GFX_evt_sabotaged_ship
	is_triggered_only = yes

	option = {
		name = starborn_traits.12.option.a
		random_owned_pop = {
			limit = {
				is_robot_pop = no
				is_starborn_pop = no
			}
			kill_pop = yes
		}
		add_modifier = {
			modifier = starborn_xenophobe_100
			days = 360
		}
	}
}



# planet farming brought biological contamination
planet_event = {
	id = starborn_traits.20
	hide_window = yes
	mean_time_to_happen = {
		years = @mtth
	}

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		
		owner = {
			is_country_type = default
			is_regular_empire = yes
			NOT = { has_country_flag = STARBORN_NO_EVENTS }
		}
		habitable_structure = yes
		any_owned_pop = {
			is_starborn_pop = yes
		}
		has_modifier = starborn_farming_planet
	}

	immediate = {
		random_list = {
			1 = {
				modifier = {
					add = 2
					has_gene_clinic = no
				}
				planet_event = {
					id = starborn_traits.21
				}
				owner = {
					country_event = {
						id = starborn_traits.60
						days = 10
					}
				}
			}
			1 = {
				planet_event = {
					id = starborn_traits.22
				}
			}

			30 = {
				modifier = {
					add = 100
					owner = {
						has_country_flag = starborn_disease_gene_engineered
					}
				}
				# do nothing...
				set_variable = { which = EventId value = 20 }
				owner = { country_event = { id = starborn_traits.999 } }
			}
		}
	}
}


planet_event = {
	id = starborn_traits.21
	title = starborn_traits.21.name
	desc = starborn_traits.21.desc
	picture = GFX_evt_emergency_workers
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = starborn_no_bad_planet_bio
			}
		}
	}

	option = {
		name = starborn_traits.21.option.a
		allow = {
			has_gene_clinic = yes
			owner = {
				resource_stockpile_compare = {
					resource = consumer_goods
					value >= 500
				}
			}
		}
		owner = {
			add_resource = {
				consumer_goods = -500
			}
		}
		add_modifier = {
			modifier = starborn_farming_penalty_75
			days = 180
		}	
	}
	
	option = {
		name = starborn_traits.21.option.b
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		add_modifier = {
			modifier = starborn_died_of_disease
			days = 360
		}
		add_modifier = {
			modifier = starborn_farming_penalty_75
			days = 360
		}
	}

	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_planet_bio
				country_event = {
					id = starborn_traits.901
					days = @noRecurDays
				}
			}
		}
	}
}


# gain some society research
planet_event = {
	id = starborn_traits.22
	title = starborn_traits.22.name
	desc = starborn_traits.22.desc
	picture = GFX_evt_society_research
	is_triggered_only = yes

	option = {
		name = starborn_traits.22.option.a
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier1researchreward
				min = @tier1researchmin
				max = @tier1researchmax
			}
		}
	}
}



# planet scavenger districts went wrong
planet_event = {
	id = starborn_traits.30
	hide_window = yes
	mean_time_to_happen = {
		years = @mtth
	}

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		
		owner = {
			is_country_type = default
			is_regular_empire = yes
			NOT = { has_country_flag = STARBORN_NO_EVENTS }
		}
		habitable_structure = yes
		has_district = district_starborn_starting_scavenger
	}

	immediate = {
		random_galaxy_planet = {
			limit = {
				has_planet_flag = planet_of@prev
			}
			save_event_target_as = planet_target
		}
		random_list = {
			1 = {
				planet_event = {
					id = starborn_traits.31
				}
			}
			1 = {
				planet_event = {
					id = starborn_traits.32
				}
			}
			1 = {
				planet_event = {
					id = starborn_traits.33
				}
			}

			40 = {
				# do nothing...
				set_variable = { which = EventId value = 30 }
				owner = { country_event = { id = starborn_traits.999 } }
			}
		}
	}
}


# person killed, compensate or not
planet_event = {
	id = starborn_traits.31
	title = starborn_traits.31.name
	desc = starborn_traits.31.desc
	picture = GFX_evt_dead_city
	is_triggered_only = yes

	trigger = {
		owner = {
			NOT = {
				has_country_flag = starborn_no_bad_hab_salvage
			}
		}
	}

	option = {
		name = starborn_traits.31.option.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 500
				}
			}
		}
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		owner = {
			add_resource = {
				energy = -500
			}
		}
	}
	
	option = {
		name = starborn_traits.31.option.b
		random_owned_pop = {
			limit = {
				is_starborn_pop = yes
			}
			kill_pop = yes
		}
		add_modifier = {
			modifier = starborn_scavenger_unhappy
			days = 360
		}
	}

	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_salvage
				country_event = {
					id = starborn_traits.902
					days = @noRecurDays
				}
			}
		}
	}
}



# stuff damaged, rebuild or not
planet_event = {
	id = starborn_traits.32
	title = starborn_traits.32.name
	desc = starborn_traits.32.desc
	picture = GFX_evt_dead_city
	is_triggered_only = yes
	
	trigger = {
		owner = {
			NOT = {
				has_country_flag = starborn_no_bad_hab_salvage
			}
		}
	}

	option = {
		name = starborn_traits.32.option.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = minerals
					value >= 500
				}
			}
		}
		owner = {
			add_resource = {
				minerals = -500
			}
		}
	}
	
	option = {
		name = starborn_traits.32.option.b
		add_modifier = {
			modifier = starborn_scavenger_damaged
			days = 360
		}
	}

	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_salvage
				country_event = {
					id = starborn_traits.902
					days = @noRecurDays
				}
			}
		}
	}
}


#found a big-ole cache of alloys
planet_event = {
	id = starborn_traits.33
	title = starborn_traits.33.name
	desc = starborn_traits.33.desc
	picture = GFX_evt_dead_city
	is_triggered_only = yes
	
	option = {
		name = starborn_traits.33.option.a
		owner = {
			add_monthly_resource_mult = {
				resource = alloys
				value = @tier3materialreward
				min = @tier3materialmin
				max = @tier3materialmax
			}
		}
	}
}





#All the Dimensional portal stuff in vanilla is here:
#Colony.3.txt
# planet_event = { #Dimensional portal
# 	id = colony.3005
# 	title = "colony.3005.name"
# 	desc = "colony.3005.desc"
# 	picture = GFX_evt_wormhole
# 	location = ROOT
# 	trackable = yes

# dark matter lab go boom!
planet_event = {
	id = starborn_traits.40
	hide_window = yes
	mean_time_to_happen = {
		years = @mtth
	}

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		
		owner = {
			is_country_type = default
			is_regular_empire = yes
			NOR = { 
				has_country_flag = STARBORN_NO_EVENTS
				has_country_flag = starborn_no_bad_hab_sr
			}
		}
		habitable_structure = yes
		has_building = building_starborn_dark_matter_extractor
	}

	immediate = {
		random_list = {
			5 = {
				planet_event = {
					id = starborn_traits.41
				}
			}
			5 = {
				planet_event = {
					id = starborn_traits.42
				}
			}
			4 = {
				planet_event = {
					id = starborn_traits.43
				}
			}
			3 = {
				planet_event = {
					id = starborn_traits.44
				}
			}
			2 = {
				planet_event = {
					id = starborn_traits.45
				}
			}
		
			100 = {
				# do nothing...
				set_variable = { which = EventId value = 40 }
				owner = { country_event = { id = starborn_traits.999 } }
			}
		}
	}
}


planet_event = {
	id = starborn_traits.41
	title = starborn_traits.41.name
	desc = starborn_traits.41.desc1
	picture = GFX_evt_debris
	is_triggered_only = yes

	option = {
		name = starborn_traits.41.option.a
		remove_building = building_starborn_dark_matter_extractor
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}

planet_event = {
	id = starborn_traits.42
	title = starborn_traits.41.name
	desc = starborn_traits.41.desc2
	picture = GFX_evt_debris
	is_triggered_only = yes

	option = {
		name = starborn_traits.41.option.a
		remove_building = building_starborn_dark_matter_extractor
		random_owned_pop = {
			limit = {
				has_job = starborn_dark_matter_extractor
			}
			kill_pop = yes
		}		
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}

planet_event = {
	id = starborn_traits.43
	title = starborn_traits.41.name
	desc = starborn_traits.41.desc3
	picture = GFX_evt_debris
	is_triggered_only = yes

	option = {
		name = starborn_traits.41.option.a
		add_planet_devastation = 25
		remove_building = building_starborn_dark_matter_extractor
		random_owned_pop = {
			limit = {
				has_job = starborn_dark_matter_extractor
			}
			kill_pop = yes
		}		
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}

planet_event = {
	id = starborn_traits.44
	title = starborn_traits.41.name
	desc = starborn_traits.41.desc4
	picture = GFX_evt_debris
	is_triggered_only = yes

	option = {
		name = starborn_traits.41.option.a		
		add_planet_devastation = 75
		remove_building = building_starborn_dark_matter_extractor
		random_owned_pop = {
			limit = {
				has_job = starborn_dark_matter_extractor
			}
			kill_pop = yes
		}		
		random_owned_pop = {
			kill_pop = yes
		}
		random_owned_pop = {
			kill_pop = yes
		}
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}

# Demon invasion!
planet_event = {
	id =  starborn_traits.45
	title =  starborn_traits.45.name
	desc = starborn_traits.45.desc
	picture = GFX_evt_ground_combat
	show_sound = event_air_raid_siren
	location = ROOT
	is_triggered_only = yes
	
	immediate = {
		set_planet_flag = starborn_demon_invasion
		create_country = {
			name = "Demonic Invasion"
			type = faction
			effect = {
				establish_communications_no_message = root.owner
			}
		}
		create_species = {
			name = "Demons"
			class = random_non_machine
			portrait = random
			traits = random
		}
		set_variable = {
			which = count
			value = 0
		}
		while = {
			limit = {
				check_variable = {
					which = count
					value <= 5
				}
			}
			create_army = {
				name = "Demonic Cannonfodder"
				owner = last_created_country
				species = last_created_species
				type = "starborn_demon_army"
			}
		}

		create_army = {
			name = "Hells Titans"
			owner = last_created_country
			species = last_created_species
			type = "starborn_titan_demon_army"
		}
	}
	
	option = {
		name = starborn_traits.45.option.a
		custom_tooltip = starborn_traits.45.option.a.tooltip
	}

	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}


# Defeat fighting Demons
country_event = {
	id = starborn_traits.46
	title = "starborn_traits.46.name"
	desc = "starborn_traits.46.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_ghost_town
	location = FROMFROM

	is_triggered_only = yes

	trigger = {
		FROMFROM = { has_planet_flag = starborn_demon_invasion }
	}

	immediate = {
		FROMFROM = {
			set_planet_flag = starborn_demon_invasion_demons_won
			remove_planet_flag = starborn_demon_invasion
			every_owned_pop = {
				set_pop_flag = event_purge
				unemploy_pop = yes
			}
		}
	}

	option = {
		name = starborn_traits.46.option.a
	}
}

# Liberated from Demons
country_event = {
	id = starborn_traits.47
	title = "starborn_traits.47.name"
	desc = "starborn_traits.47.desc"
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	location = FROMFROM

	is_triggered_only = yes

	trigger = {
		FROMFROM = { has_planet_flag = starborn_demon_invasion_demons_won }
	}

	immediate = {
		FROMFROM = {
			remove_planet_flag = starborn_demon_invasion_demons_won
			set_owner = ROOT
			every_owned_pop = {
				remove_pop_flag = event_purge
				unemploy_pop = yes
			}

			every_owned_pop = {
				remove_modifier = "pop_recently_conquered"
				add_modifier = {
					modifier = "pop_liberation_fever"
					days = 3600
				}
			}

			remove_building = building_starborn_dark_matter_extractor
		}
	}

	option = {
		name = starborn_traits.47.option.a
	}
}


# repelled demons
country_event = {
	id = starborn_traits.48
	hide_window = yes
	location = FROMFROM

	is_triggered_only = yes

	trigger = {
		FROMFROM = { has_planet_flag = starborn_demon_invasion }
	}

	immediate = {
		FROMFROM = {
			remove_planet_flag = starborn_demon_invasion
		}
	}
}






# Zro cult
planet_event = {
	id = starborn_traits.50
	hide_window = yes
	mean_time_to_happen = {
		years = @mtth
	}

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		
		owner = {
			is_country_type = default
			is_regular_empire = yes
			NOR = { 
				has_country_flag = STARBORN_NO_EVENTS 
				has_country_flag = starborn_no_bad_hab_sr
			}
		}
		habitable_structure = yes
		has_building = building_starborn_zro_extractor
	}

	immediate = {
		random_list = {
			1 = {
				planet_event = {
					id = starborn_traits.51
				}
			}
			1 = {
				planet_event = {
					id = starborn_traits.52
				}
			}
			50 = {
				# do nothing...
				set_variable = { which = EventId value = 50 }
				owner = { country_event = { id = starborn_traits.999 } }
			}
		}
	}
}


# everyone is getting high on zro
planet_event = {
	id = starborn_traits.51
	title = starborn_traits.51.name
	desc = starborn_traits.51.desc
	picture = GFX_evt_dead_city
	is_triggered_only = yes

	option = {
		name = starborn_traits.51.option.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 500
				}
			}
		}	
		owner = {
			add_resource = {
				energy = -500
			}
		}
	}
	
	option = {
		name = starborn_traits.51.option.b
		add_modifier = {
			modifier = starborn_zro_everywhere
			days = 360
		}	
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}



# CULT!
planet_event = {
	id = starborn_traits.52
	title = starborn_traits.52.name
	desc = starborn_traits.52.desc
	picture = GFX_evt_dead_city
	is_triggered_only = yes

	option = {
		name = starborn_traits.52.option.a
		allow = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_spiritualist
					has_ethic = ethic_spiritualist
				}
			}
		}	
		add_modifier = {
			modifier = starborn_zro_cult_embraced
			days = 720
		}	
	}
	
	option = {
		name = starborn_traits.52.option.b
		add_modifier = {
			modifier = starborn_zro_cult_left
			days = 1000
		}	
	}

	option = {
		name = starborn_traits.52.option.c
		allow = {
			any_owned_pop = {
				has_job = enforcer
			}
		}
		add_modifier = {
			modifier = starborn_zro_cult_suppressed
			days = 180
		}
	}
	after = {
		hidden_effect = {
			owner = {
				set_country_flag = starborn_no_bad_hab_sr
				country_event = {
					id = starborn_traits.903
					days = @noRecurDays
				}
			}
		}
	}
}








# Genetically fix it
# With base gene engineering
country_event = {
	id = starborn_traits.60
	title = starborn_traits.60.name
	desc = starborn_traits.60.desc
	picture = GFX_evt_emergency_workers
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		has_starborn = yes
		has_tradition = tr_genetics_adopt
	}

	option = {
		name = OK
		enable_special_project = {
			name = "starborn_lower_disease_chance"
			location = capital_scope
			owner = root
		}
	}
}


planet_event = {
	id = starborn_traits.61
	title = starborn_traits.61.name
	desc = starborn_traits.61.desc
	picture = GFX_evt_emergency_workers
	is_triggered_only = yes
	option = {
		name = OK
		hidden_effect = {
			owner = {
				set_country_flag = starborn_disease_gene_engineered
			}
		}
	}
}


#With genetic mastery
country_event = {
	id = starborn_traits.70
	title = starborn_traits.70.name
	desc = starborn_traits.70.desc
	picture = GFX_evt_emergency_workers
	fire_only_once = yes
	is_triggered_only = yes
	trigger = {
		has_starborn = yes
		has_tradition = tr_genetics_finish
	}

	option = {
		name = OK
		enable_special_project = {
			name = "starborn_gene_edit_out"
			location = capital_scope
			owner = root
		}
		abort_special_project = {
			type = starborn_lower_disease_chance
			location = capital_scope
		}
	}
}


planet_event = {
	id = starborn_traits.71
	title = starborn_traits.71.name
	desc = starborn_traits.71.desc
	picture = GFX_evt_emergency_workers
	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = starborn_super_gene_engineered
			country_event = { id = starborn_traits.72 } 
			# Try again a few days after because sometimes it misses a pop
			country_event = { id = starborn_traits.72 days = 10 }
		}
	}

	option = {
		name = starborn_traits.71.option.a
	}
}

country_event = {
	id = starborn_traits.72
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			limit = {
				OR = {
					has_trait = trait_starborn_positive
					has_trait = trait_starborn_negative_1
					has_trait = trait_starborn_negative_2
					has_trait = trait_starborn_negative_3
					has_trait = trait_starborn_cyber_negative
					has_trait = trait_starborn_psi_negative
				}
			}
			starborn_remove_negative_traits = yes
			starborn_remove_trait = {
				trait = trait_starborn_positive
			}
			modify_species = {
				species = this
				add_trait = trait_starborn_gene_positive
			}
		}
	}
}



country_event = {
	id = starborn_traits.900
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		remove_country_flag = starborn_no_bad_planet_bio
		set_variable = { which = EventId value = 900 }
		owner = { country_event = { id = starborn_traits.999 } }
	}
}

country_event = {
	id = starborn_traits.901
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		remove_country_flag = starborn_no_bad_hab_bio
		set_variable = { which = EventId value = 901 }
		owner = { country_event = { id = starborn_traits.999 } }
	}
}

country_event = {
	id = starborn_traits.902
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		remove_country_flag = starborn_no_bad_hab_salvage
		set_variable = { which = EventId value = 902 }
		owner = { country_event = { id = starborn_traits.999 } }
	}
}

country_event = {
	id = starborn_traits.903
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		remove_country_flag = starborn_no_bad_hab_sr
		set_variable = { which = EventId value = 903 }
		owner = { country_event = { id = starborn_traits.999 } }
	}
}







country_event = {
	id = starborn_traits.999
	title = starborn_traits.999.name
	desc = starborn_traits.999.desc
	picture = GFX_evt_synth_sabotage
	is_triggered_only = yes
	trigger = {
		has_country_flag = STARBORN_EVENT_DEBUG
	}

	option = {
		name = OK
	}
}

planet_event = {
	id = starborn_traits.1000
	title = starborn_traits.1000.name
	desc = starborn_traits.1000.desc
	picture = GFX_evt_synth_sabotage
	is_triggered_only = yes
	option = {
		allow = {
			habitable_structure = no
		}
		name = starborn_traits.1000.option.1
		planet_event = {
			id = starborn_traits.1
		}
	}

	option = {
		allow = {
			habitable_structure = yes
		}
		name = starborn_traits.1000.option.10
		planet_event = {
			id = starborn_traits.10
		}
	}

	option = {
		allow = {
			habitable_structure = yes
		}
		name = starborn_traits.1000.option.20
		planet_event = {
			id = starborn_traits.20
		}
	}

	option = {
		allow = {
			habitable_structure = yes
		}
		name = starborn_traits.1000.option.30
		planet_event = {
			id = starborn_traits.30
		}
	}


	option = {
		allow = {
			habitable_structure = yes
		}
		name = starborn_traits.1000.option.40
		planet_event = {
			id = starborn_traits.40
		}
	}

	option = {
		allow = {
			habitable_structure = yes
		}
		name = starborn_traits.1000.option.50
		planet_event = {
			id = starborn_traits.50
		}
	}
	
	option = {
		name = starborn_traits.1000.option.nope
	}
}


country_event = {
	id = starborn_traits.1010
	title = starborn_traits.1010.name
	desc = starborn_traits.1010.desc
	picture = GFX_evt_synth_sabotage
	is_triggered_only = yes
	option = {
		trigger = { NOT = { has_country_flag = starborn_no_bad_planet_bio } }
		name = starborn_traits.1010.starborn_no_bad_planet_bio.on
		set_country_flag = starborn_no_bad_planet_bio
	}

	option = {
		trigger = { has_country_flag = starborn_no_bad_planet_bio }
		name = starborn_traits.1010.starborn_no_bad_planet_bio.off
		remove_country_flag = starborn_no_bad_planet_bio
	}


	option = {
		trigger = { NOT = { has_country_flag = starborn_no_bad_hab_bio } }
		name = starborn_traits.1010.starborn_no_bad_hab_bio.on
		set_country_flag = starborn_no_bad_hab_bio
	}

	option = {
		trigger = { has_country_flag = starborn_no_bad_hab_bio }
		name = starborn_traits.1010.starborn_no_bad_hab_bio.off
		remove_country_flag = starborn_no_bad_hab_bio
	}

	option = {
		trigger = { NOT = { has_country_flag = starborn_no_bad_hab_salvage } }
		name = starborn_traits.1010.starborn_no_bad_hab_salvage.on
		set_country_flag = starborn_no_bad_hab_salvage
	}

	option = {
		trigger = { has_country_flag = starborn_no_bad_hab_salvage }
		name = starborn_traits.1010.starborn_no_bad_hab_salvage.off
		remove_country_flag = starborn_no_bad_hab_salvage
	}

	option = {
		trigger = { NOT = { has_country_flag = starborn_no_bad_hab_sr } }
		name = starborn_traits.1010.starborn_no_bad_hab_sr.on
		set_country_flag = starborn_no_bad_hab_sr
	}

	option = {
		trigger = { has_country_flag = starborn_no_bad_hab_sr }
		name = starborn_traits.1010.starborn_no_bad_hab_sr.off
		remove_country_flag = starborn_no_bad_hab_sr
	}

	
	option = {
		name = starborn_traits.1000.option.nope
	}
}



# @Draconas Good to know there is the same kind of problem for triggers :P
# Here is how you can pass arguments through scripted effects. You can do the same for triggers, but giving parameters negates the trigger (more on that below)
# my_effect = {
#   set_species_flag = $FLAG$
# }

# Use it with :
# my_effect = { FLAG = some_string }

# my_effect = {
#   set_species_flag = $FLAG|default_flag$
# }

# Use it with :
# my_effect = { FLAG = some_string }
# OR (for using the default)
# my_effect = yes

# Careful, stellaris will need to use any given arguments (so giving a VALUE in the previous examples might cause an error as it is not used).
# Also from what I experienced, stellaris compiles (aka replaces) every occurence of $something|default$ before executing the trigger. That means having 50+ occurence of $adz$ might cause some lag.

# Now for the scripted_triggers : it works the same except :
# If you use a trigger like my_trigger = yes (aka using the default values) it works like you would expect.
# If you use a trigger like my_trigger = { VALUE = 54 } (ie using non default arguments), then it is the opposite of what you would expect (so it is actually NOT = { my_trigger = { VALUE = 54 }}).
# I haven't tested the triggers a lot, so it might not be totally accurate. So please test it on your side and don't take this information for 100% accurate
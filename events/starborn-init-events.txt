namespace = starborn_init

#1. starting - spawn planets and habitats
country_event = {
	id = starborn_init.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
			is_ai = no
			has_starborn = yes
	}

	immediate = {
		save_event_target_as = starborn_country
		set_country_flag = starborn_origin
		set_country_flag = starborn_hab_size_4

		# we live in a space station, we understand how hydroponics work
		give_technology = { 
			message = no 
			tech = tech_hydroponics 
		}

		# Say hello to voidborn AP.
		give_technology = { 
			message = no 
			tech = tech_habitat_1 
		}
	
		# tweak the starting system
		random_system_within_border = {
			limit = {
					any_system_planet = {
							is_capital = yes
					}
			}
			
			# Capital
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_origin
				}
				
				save_event_target_as = origin
				if = {
					limit = { has_orbital_station = yes }
					orbital_station = {
						dismantle = yes
					}
				}
			}

			#solar habitat
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_orbital_city
				}
				
				save_event_target_as = orbital_city
			}

			event_target:origin = {
				event_target:orbital_city = {
					set_planet_flag = habitat_of@prev
				}
			}

			event_target:orbital_city = {
				event_target:origin = {
					set_planet_flag = planet_of@prev
				}
			}

			# Star
			random_system_planet = { 
				limit = {
					is_star = yes
					has_planet_flag = starborn_start_solar
				}
				
				save_event_target_as = star_spawn
				if = {
					limit = { has_orbital_station = yes }
					orbital_station = {
						dismantle = yes
					}
				}
			}

			#solar habitat
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_start_solar_hab
				}
				
				save_event_target_as = star_hab
			}
		
			event_target:star_spawn = {
				event_target:star_hab = {
					set_planet_flag = habitat_of@prev
				}
			}

			event_target:star_hab = {
				event_target:star_spawn = {
					set_planet_flag = planet_of@prev
				}
			}

			# Asteroid
			random_system_planet = { 
				limit = {
					has_planet_flag = starborn_start_mining
				}
				
				save_event_target_as = asteroid_spawn
				if = {
					limit = { has_orbital_station = yes }
					orbital_station = {
						dismantle = yes
					}
				}
			}

			#mining habitat
			random_system_planet = {
				limit = {
					has_planet_flag = starborn_start_mining_hab
				}
				
				save_event_target_as = asteroid_hab
			}

			event_target:asteroid_spawn = {
				event_target:asteroid_hab = {
					set_planet_flag = habitat_of@prev
				}
			}

			event_target:asteroid_hab = {
				event_target:asteroid_spawn = {
					set_planet_flag = planet_of@prev
				}
			}

			every_system_planet = {
				limit = {
					is_planet_class = pc_habitat
				}
				set_planet_entity = {
					entity = "habitat_phase_01_entity"
					graphical_culture = event_target:starborn_country
				}
			}
		}
	}
}



#3. Starting mechanics display
country_event = {
	id = starborn_init.3    
	title = "starborn_init.3.name"
	desc = "starborn_init.3.desc"
	picture = GFX_evt_colony_settlement
	is_triggered_only = yes

		trigger = {
				is_ai = no
				has_starborn = yes
		}

	option = {
		name = "starborn_init.3.option.a"
	}
}


#7. enact living metal event if playing in the OP system.  
country_event = {
	id = starborn_init.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
			is_ai = no
			has_starborn = yes
	}

	immediate = {
			if = {
					limit = {
							has_tech_option = tech_mine_living_metal
					}
					add_tech_progress = {
							tech = tech_mine_living_metal
							progress = 0.25
					}
			}
			else = {
					add_research_option = tech_mine_living_metal
			}
	}
}

#8. Deal with Starting world - the orbital city
planet_event = {
	id = starborn_init.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_starborn = yes
		}
	}

	immediate = {
		set_name = "Arc of Civilisation"
		solar_system = {
			if = {
				limit = {
					has_star_flag = sol_system
				}
				set_name = NAME_Sol
				random_system_planet = {
					limit = {
						is_star = yes
					}
					set_name = NAME_Sol
				}
			}
		}
		set_planet_entity = {
			entity = "habitat_phase_03_entity"
			graphical_culture = owner
		}
		add_modifier = {
			modifier = starborn_startup_fix
			days = 1
		}
		clear_blockers = yes
		remove_all_districts = yes			
		add_district = district_starborn_starting_hab_housing
		add_district = district_starborn_starting_hab_housing
		add_district = district_starborn_starting_hab_housing
		add_district = district_starborn_starting_scavenger
		add_district = district_starborn_starting_scavenger
		add_district = district_starborn_starting_solar
		add_district = district_starborn_starting_solar
		add_district = district_starborn_starting_solar
		add_district = district_starborn_hab_industrial
		add_district = district_starborn_hab_industrial
		
		if = {
			limit = {
				owner = {
					is_lithoid_empire = yes
				}
			}
			add_district = district_starborn_starting_scavenger
			add_district = district_starborn_starting_scavenger
			add_district = district_starborn_starting_scavenger
			add_district = district_starborn_starting_solar
			add_district = district_starborn_starting_solar
		}
		else = {
			add_district = district_starborn_starting_preserve
			add_district = district_starborn_starting_preserve
			add_district = district_starborn_starting_preserve
		}

		every_owned_pop = {
			unemploy_pop = yes
			clear_pop_category = yes
		}

		every_owned_pop = {
			root = {
				check_planet_employment = yes
			}
		}
	}
}


# Central Crystal Events worked for starborn
event = {
	id = starborn_init.9

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		host_has_dlc = Federations
		any_country = {
			is_ai = no
			has_starborn = yes
		}
	}

	immediate = {
		random = {
			chance = 10
			set_global_flag = central_crystal_flag
		}
	}
}